// Jenkinsfile-regression (For the Nightly Full Regression Suite)

pipeline {
    agent any

    tools {
        maven 'apache-maven-3.9.9'
        jdk 'JDK 21'
    }

    stages {
        // --- ADDED THIS NEW STAGE FOR TRACEABILITY ---
        stage('Log Build Info') {
            steps {
                echo "================================================="
                echo "      BUILD & TEST METADATA"
                echo "================================================="
                echo "Job: ${env.JOB_NAME}"
                echo "Build Number: ${env.BUILD_NUMBER}"
                echo "Triggered by: ${currentBuild.getBuildCauses()[0].shortDescription}"
                echo "Branch: ${env.BRANCH_NAME}"
                echo "Commit: ${env.GIT_COMMIT}"
                echo "================================================="
            }
        }

        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build & Run Regression Tests') {
            steps {
                echo 'Running FULL regression suite...'
                bat 'mvn clean test -P regression -Denv=QA'
            }
        }
    }

    // The post block remains the same
    post {
        always {
            echo 'Archiving reports and emailing results for REGRESSION suite...'
            
            archiveArtifacts artifacts: 'reports/**', allowEmptyArchive: true
            publishHTML(reportName: 'Regression Test Report', reportDir: 'reports', reportFiles: 'index.html', keepAll: true, alwaysLinkToLastBuild: true, allowMissing: true)
            
            script {
                def reportToAttach = 'reports/regression-report.html'
                def summaryFile = 'reports/regression-failure-summary.txt'
                
                def failureSummary = fileExists(summaryFile) ? readFile(summaryFile).trim() : "Check Jenkins console for details."
                def reportURL = "${env.BUILD_URL}Regression-Test-Report/"

                // ... (rest of your existing, correct email logic)
            }
        }
    }
}