pipeline {
    agent any
    tools { /* ... your tools ... */ }
    stages {
        stage('Clean Workspace') { steps { cleanWs() } }
        stage('Checkout SCM') { steps { checkout scm } }
        stage('Build & Run Regression Tests') {
            steps {
                echo 'Running FULL regression suite...'
                bat 'mvn clean test -P regression -Denv=QA'
            }
        }
    }

    post {
        always {
            echo 'Archiving reports and emailing results for REGRESSION suite...'

            def reportFile = 'reports/regression-report.html'
            def summaryFile = 'reports/regression-failure-summary.txt'

            archiveArtifacts artifacts: reportFile, allowEmptyArchive: true
            publishHTML(reportName: 'Regression Test Report', reportDir: 'reports', reportFiles: 'regression-report.html', keepAll: true, alwaysLinkToLastBuild: true, allowMissing: true)

            script {
                def failureSummary = fileExists(summaryFile) ? readFile(summaryFile).trim() : "Check Jenkins console for details."
                def reportURL = "${env.BUILD_URL}Regression-Test-Report/"

                // ... (your existing if/else logic for emailSubject and emailBody using failureSummary) ...
                
                withCredentials([string(credentialsId: 'recipient-email-list', variable: 'RECIPIENT_EMAILS')]) {
                    emailext(
                        subject: emailSubject,
                        body: emailBody,
                        to: RECIPIENT_EMAILS,
                        mimeType: 'text/html',
                        attachmentsPattern: reportFile
                    )
                }
            }
        }
    }
}